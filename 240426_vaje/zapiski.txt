aura@aura-virtual-machine:/proc$ cat cmdline 
BOOT_IMAGE=/boot/vmlinuz-5.15.0-102-generic root=UUID=06bc40f8-5f1f-4c3c-b62c-cbb8660f3adc ro quiet splash

/proc/PID 

Ukazi teh vaj: 
* pidof, pgrep
    * get PID of a proces using it's name 
    * get PID of a proces using a regex (i. e. .sh -> kar se konča z sh)
* ps, top, pstree (also htop is nice)
    * ps izpiše samo te procese ki smo zagnali iz tega terminala
        * za vse potrebujemo zastavico -e
        * -u user
        * -l -> več podatkov
    * top == task manager
        * h -> help
        * u -> type in user
        * k -> type in PID to kill :D  
    * ko zaženemo sistem se zažene systemd -> vsi ostali procesi so potomci tega 
        * -u za uporabnika 
* jobs, fg, bg 
    * processes running in the current terminal
    * foreground
    * background
* kill, pkill, killall
    * kill -sigspec pid 
        * SIGTERM, TERM, 
* sleep 
* wait
* nice, renice

PID trenutnega terminala (bash ki trenutno dela v terminalu) 
    pid=$$

Trenutno vseh procesov 
ps -e | echo $(($(wc -l) -2))
    * -2 ker zaženemo še wc -l in echo 

aura@aura-virtual-machine:~$ pstree $$
bash─┬─pstree
     └─13*[xeyes]

aura@aura-virtual-machine:~/Documents/Zapiski/240426_vaje$ cd /proc
aura@aura-virtual-machine:/proc$ cd 19242
aura@aura-virtual-machine:/proc/19242$ ls
arch_status  comm                fd         maps        numa_maps      projid_map  smaps_rollup  timens_offsets
attr         coredump_filter     fdinfo     mem         oom_adj        root        stack         timers
autogroup    cpu_resctrl_groups  gid_map    mountinfo   oom_score      sched       stat          timerslack_ns
auxv         cpuset              io         mounts      oom_score_adj  schedstat   statm         uid_map
cgroup       cwd                 limits     mountstats  pagemap        sessionid   status        wchan
clear_refs   environ             loginuid   net         patch_state    setgroups   syscall
cmdline      exe                 map_files  ns          personality    smaps       task


/proc/PID/fd/ -> standardni vhod/izhod/error
0 -> vhod
1 -> izhod 
2 -> error

če ima ukaz še argumente ki so datoteke ima lahko tudi več številk (npr cat < testfifo | tee c d) bosta datoteki c 3 in d 4. 


cat /proc/PID/environ -> environment
    okoljske spremenljivke za ta proces 
cat /proc/PID/status
    grep -i ppid 
    -> nam pove PID starša tega procesa

readlink /proc/PID/exe -> pove kater ukaz se je pognal 
cat /proc/PID/cmdline | tr "\0" "\n" -> pokaže točno kako smo pognali ukaz ("tee c d" but newLines instead of spaces) 


Signali
npr. Brezpogojno prekinitev procesa



Ctrl+Z -> stop job in foreground (fg job) 
Ctrl+Z -> quit process in foreground (fg job) 

job ali job id 
name, %id
gedit %1 -> če ko poženeš jobs je zraven tega 1 



disown ni več child trenutnega procesa
nohup zaženemo kot ne-child


aura@aura-virtual-machine:~$ kill -l 
 1) SIGHUP	 2) SIGINT	 3) SIGQUIT	 4) SIGILL	 5) SIGTRAP
 6) SIGABRT	 7) SIGBUS	 8) SIGFPE	 9) SIGKILL	10) SIGUSR1
11) SIGSEGV	12) SIGUSR2	13) SIGPIPE	14) SIGALRM	15) SIGTERM
16) SIGSTKFLT	17) SIGCHLD	18) SIGCONT	19) SIGSTOP	20) SIGTSTP


time -> izmeri koliko časa se izvaja
nice -> prioriteta
renice -> restart with prioriteta
    Manjša številka -> najvišja prioriteta


aura@aura-virtual-machine:~/Documents/Zapiski/240426_vaje$ time nice -20 tree / > /dev/null

real	0m4,578s
user	0m1,158s
sys	    0m3,397s
aura@aura-virtual-machine:~/Documents/Zapiski/240426_vaje$ time tree / > /dev/null

real	0m4,528s
user	0m1,575s
sys	    0m2,946s

Program z neskončno zanko




